#!/usr/bin/env ruby

require 'thor'

class Dotfiles < Thor
  desc "dotfiles", "Install all the dotfiles!"
  def dotfiles
    replace_all = false
    
    files = DIR['*'] - %w[Brewfile README.md LICENSE install.sh Thorfile]
    
    files.each do |file|
      dest_file = File.join(ENV['HOME'], ".#{file}")
      system %Q{mkdir -p "$HOME/.#{File.dirname(file)}"} if file =~ /\//
      if File.exists?(dest_file)
        if File.identical? file, File.join(dest_file)
          puts "identical ~/.#{file}"
        elsif replace_all
          replace_file(file)
        else
          print "overwrite ~/.#{file}? [ynaq] "
          case stdin.gets.chomp
          when 'a'
            replace_all = true
            replace_file(file)
          when 'y'
            replace_file(file)
          when 'q'
            exit
          else
            puts "skipping ~/.#{file}"
          end
        end
      else
        link_file(file)
      end
    end
  end
  
  private
  
  def replace_file(file)
    system %Q{rm -rf "$HOME/.#{file}"}
    link_file(file)
  end
  
  def link_file(file)
    puts "linking #{file}"
    File.symlink(file, File.join(ENV['HOME'], ".#{file}"))
  end
end

Dotfiles.start(ARGV)